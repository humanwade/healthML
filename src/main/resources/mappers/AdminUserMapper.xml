<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.dao.AdminUserDAO">
	
	<!-- 관리자 회원리스트 불러오기 -->	
	<select id="getMemberList" resultType="UserVO">
		SELECT *
		FROM USERS
		ORDER BY joindate asc;
	</select>

	<!-- 관리자 회원 삭제  -->
	<delete id="deleteUsers">
		DELETE FROM USERS
		WHERE email IN 
		<foreach item="email" collection="email" open="(" separator="," close=")">
        #{email}
    	</foreach>
	</delete>
	
	<!-- 관리자 차트 -->
	<select id="insertchart" parameterType="UserVO" resultType="UserVO" >
		WITH months AS (
		   SELECT 1 AS month UNION ALL
		   SELECT 2 UNION ALL
		   SELECT 3 UNION ALL
		   SELECT 4 UNION ALL
		   SELECT 5 UNION ALL
		   SELECT 6 UNION ALL
		   SELECT 7 UNION ALL
		   SELECT 8 UNION ALL
		   SELECT 9 UNION ALL
		   SELECT 10 UNION ALL
		   SELECT 11 UNION ALL
		   SELECT 12
		 )
		 SELECT #{year} AS year,
		        m.month,
		        IFNULL(COUNT(u.email), 0) AS email_count
		 FROM months m
		 LEFT JOIN users u
		 ON YEAR(u.joindate) = #{year} AND MONTH(u.joindate) = m.month
		 GROUP BY m.month
		 ORDER BY m.month ASC;
	</select>
	
	<!-- 관리자 전월대비 차트 -->
	<select id="monthchart" parameterType="map" resultType="hashmap" >
 SELECT 
    -- 첫 번째 조건: 전달의 사용자 수 (현재 달이 1월인 경우 전년도 12월)
    (SELECT COUNT(*) 
     FROM users 
     WHERE (#{month} = 1 AND YEAR(joindate) = #{year} - 1 AND MONTH(joindate) = 12)
        OR (#{month} != 1 AND YEAR(joindate) = #{year} AND MONTH(joindate) = #{month} - 1)
    ) AS first_month_users,
    
    -- 두 번째 조건: 선택한 달의 사용자 수
    (SELECT COUNT(*) 
     FROM users 
     WHERE YEAR(joindate) = #{year} AND MONTH(joindate) = #{month}
    ) AS second_month_users,
    
    -- 증가 비율 계산
    CASE 
        WHEN 
            (SELECT COUNT(*) 
             FROM users 
             WHERE (#{month} = 1 AND YEAR(joindate) = #{year} - 1 AND MONTH(joindate) = 12)
                OR (#{month} != 1 AND YEAR(joindate) = #{year} AND MONTH(joindate) = #{month} - 1)
            ) = 0 
            AND 
            (SELECT COUNT(*) 
             FROM users 
             WHERE YEAR(joindate) = #{year} AND MONTH(joindate) = #{month}
            ) > 0 
        THEN 100.00
        WHEN 
            (SELECT COUNT(*) 
             FROM users 
             WHERE (#{month} = 1 AND YEAR(joindate) = #{year} - 1 AND MONTH(joindate) = 12)
                OR (#{month} != 1 AND YEAR(joindate) = #{year} AND MONTH(joindate) = #{month} - 1)
            ) = 0 
            AND 
            (SELECT COUNT(*) 
             FROM users 
             WHERE YEAR(joindate) = #{year} AND MONTH(joindate) = #{month}
            ) = 0 
        THEN 0.00
        ELSE ROUND((
            (SELECT COUNT(*) 
             FROM users 
             WHERE YEAR(joindate) = #{year} AND MONTH(joindate) = #{month}
            ) - 
            (SELECT COUNT(*) 
             FROM users 
             WHERE (#{month} = 1 AND YEAR(joindate) = #{year} - 1 AND MONTH(joindate) = 12)
                OR (#{month} != 1 AND YEAR(joindate) = #{year} AND MONTH(joindate) = #{month} - 1)
            )
        ) * 100.0 / 
        (SELECT COUNT(*) 
         FROM users 
         WHERE (#{month} = 1 AND YEAR(joindate) = #{year} - 1 AND MONTH(joindate) = 12)
            OR (#{month} != 1 AND YEAR(joindate) = #{year} AND MONTH(joindate) = #{month} - 1)
        ), 2)
    END AS change_percentage
FROM DUAL;
	</select>
	
	<!-- 관리자 성별 통계 -->
	<select id="gendercount" parameterType="UserVO" resultType="UserVO">
		SELECT 
    gender,
    COUNT(*) AS gender_count,
    CASE 
        WHEN age BETWEEN 10 AND 19 THEN '10대'
        WHEN age BETWEEN 20 AND 29 THEN '20대'
        WHEN age BETWEEN 30 AND 39 THEN '30대'
        WHEN age BETWEEN 40 AND 49 THEN '40대'
        WHEN age BETWEEN 50 AND 59 THEN '50대'
        ELSE '60+'
    END AS age_group,
    COUNT(*) OVER (PARTITION BY 
        CASE 
            WHEN age BETWEEN 10 AND 19 THEN '10대'
            WHEN age BETWEEN 20 AND 29 THEN '20대'
            WHEN age BETWEEN 30 AND 39 THEN '30대'
            WHEN age BETWEEN 40 AND 49 THEN '40대'
            WHEN age BETWEEN 50 AND 59 THEN '50대'
            ELSE '60+'
        END
    ) AS age_group_count
FROM 
    users
<if test="goal != '전체'" >
   WHERE goal = #{goal}
</if>
GROUP BY 
    gender, 
    CASE 
        WHEN age BETWEEN 10 AND 19 THEN '10대'
        WHEN age BETWEEN 20 AND 29 THEN '20대'
        WHEN age BETWEEN 30 AND 39 THEN '30대'
        WHEN age BETWEEN 40 AND 49 THEN '40대'
        WHEN age BETWEEN 50 AND 59 THEN '50대'
        ELSE '60+'
    END;
	</select>
	
</mapper>
